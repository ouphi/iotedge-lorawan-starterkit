name: Release

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Release tag'
        required: true
jobs:
  BuildAndPushDockerImages:
    env:
      ORGANISATION: "ouphi"
      VERSION: ${{ inputs.releaseTag }}
    strategy:
      matrix:
        image:
          - amd64
          - arm32v7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
      - name: Login to docker hub
        run: |
          docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push images
        run: |
          docker buildx build -f "./LoRaEngine/modules/LoRaWanNetworkSrvModule/Dockerfile.${{ matrix.image }}" -t $ORGANISATION/lorawannetworksrvmodule:$VERSION-${{ matrix.image }} --output type=image,push=true "."
          docker buildx build -f "./LoRaEngine/modules/LoRaBasicsStationModule/Dockerfile.${{ matrix.image }}" -t $ORGANISATION/lorabasicsstationmodule:$VERSION-${{ matrix.image }} --build-arg SOURCE_CONTAINER_REGISTRY_ADDRESS=docker.io --output type=image,push=true "."
      - name: Create manifests
        run: |
          docker manifest create $ORGANISATION/lorawannetworksrvmodule:$VERSION $ORGANISATION/lorawannetworksrvmodule:$VERSION-${{ matrix.image }} --amend
          docker manifest create $ORGANISATION/lorabasicsstationmodule:$VERSION $ORGANISATION/lorabasicsstationmodule:$VERSION-${{ matrix.image }} --amend
          docker manifest push $ORGANISATION/lorabasicsstationmodule:$VERSION
          docker manifest push $ORGANISATION/lorawannetworksrvmodule:$VERSION
  CreateRelease:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Package Azure Function
        run: |
          dotnet publish LoRaEngine/LoraKeysManagerFacade -c Release
          zip -r function-$VERSION.zip LoRaEngine/LoraKeysManagerFacade/bin/Release/net6.0
          # TODO: Update function zip name in azuredeploy.json - Create a PR with updated version?
      - name: Package Discovery Service
        run: |
          dotnet publish LoRaEngine/modules/LoRaWan.NetworkServerDiscovery/LoRaWan.NetworkServerDiscovery.csproj -c Release
          PUBLISH_FOLDER=LoRaEngine/modules/LoRaWan.NetworkServerDiscovery/bin/Release/net6.0/publish
          PUBLISH_ZIP=discoveryservice-${VERSION}.beta1.zip
          zip -r $PUBLISH_ZIP $PUBLISH_FOLDER
      - name: Create tag
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v$VERSION 
          tag_name: v$VERSION
          body_path: release_description.txt
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            function-$VERSION.zip
            discoveryservice-${VERSION}.beta1.zip
    needs: BuildAndPushDockerImages
