{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "3555246402947151796"
    }
  },
  "parameters": {
    "uniqueSolutionPrefix": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "discoveryZipUrl": {
      "type": "string"
    }
  },
  "variables": {
    "storageAccountName": "[format('{0}storage', parameters('uniqueSolutionPrefix'))]",
    "storageAccountType": "Storage",
    "credentialsContainerName": "stationcredentials",
    "firmwareUpgradesContainerName": "fwupgrades",
    "iotHubName": "[format('{0}hub', parameters('uniqueSolutionPrefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "iotHub",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('iotHubName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "3201515198599049156"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Devices/IotHubs",
              "apiVersion": "2021-07-02",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "capacity": 1,
                "name": "S1"
              }
            }
          ],
          "outputs": {
            "iotHubName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "storage",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "credentialsContainerName": {
            "value": "[variables('credentialsContainerName')]"
          },
          "firmwareUpgradesContainerName": {
            "value": "[variables('firmwareUpgradesContainerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "33589513142111750"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage account name."
              }
            },
            "storageAccountType": {
              "type": "string",
              "metadata": {
                "description": "Storage account type."
              }
            },
            "credentialsContainerName": {
              "type": "string"
            },
            "firmwareUpgradesContainerName": {
              "type": "string"
            }
          },
          "variables": {
            "FormattedCredentialsContainerName": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('credentialsContainerName'))]",
            "FormattedFirmwareUpgradesContainerName": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('firmwareUpgradesContainerName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[resourceGroup().location]",
              "kind": "[parameters('storageAccountType')]",
              "sku": {
                "name": "Premium_LRS"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[variables('FormattedCredentialsContainerName')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[variables('FormattedFirmwareUpgradesContainerName')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "redisCache",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "uniqueSolutionPrefix": {
            "value": "[parameters('uniqueSolutionPrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "2467296637881199132"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure location where to create the hosting plan. Default value is resource group location."
              }
            },
            "uniqueSolutionPrefix": {
              "type": "string",
              "metadata": {
                "description": "Prefix used for resource names. Should be unique as this will also be used for domain names."
              }
            }
          },
          "variables": {
            "redisCacheName": "[format('{0}redis', parameters('uniqueSolutionPrefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Cache/redis",
              "apiVersion": "2022-06-01",
              "name": "[variables('redisCacheName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "capacity": 0,
                  "family": "C",
                  "name": "Basic"
                }
              }
            }
          ],
          "outputs": {
            "redisCacheName": {
              "type": "string",
              "value": "[variables('redisCacheName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "function",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deployDevice": {
            "value": true
          },
          "uniqueSolutionPrefix": {
            "value": "[parameters('uniqueSolutionPrefix')]"
          },
          "useAzureMonitorOnEdge": {
            "value": true
          },
          "hostingPlanLocation": {
            "value": "[parameters('location')]"
          },
          "redisCacheName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'redisCache')).outputs.redisCacheName.value]"
          },
          "iotHubName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'iotHub')).outputs.iotHubName.value]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage')).outputs.storageAccountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "12904667451697805285"
            }
          },
          "parameters": {
            "deployDevice": {
              "type": "bool",
              "metadata": {
                "description": "Provision a final LoRa device in the IoT hub in addition to the gateway."
              }
            },
            "gitUsername": {
              "type": "string",
              "defaultValue": "Azure",
              "metadata": {
                "description": "The Git Username. Default is Azure."
              }
            },
            "hostingPlanLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure location where to create the hosting plan. Default value is resource group location."
              }
            },
            "hostingPlanSkuName": {
              "type": "string",
              "defaultValue": "Y1",
              "metadata": {
                "description": "Hosting plan SKU. Default is Y1."
              }
            },
            "hostingPlanSkuTier": {
              "type": "string",
              "defaultValue": "Dynamic",
              "metadata": {
                "description": "Hosting Plan SKU tiers. Default value is Dynamic."
              }
            },
            "uniqueSolutionPrefix": {
              "type": "string",
              "metadata": {
                "description": "Prefix used for resource names. Should be unique as this will also be used for domain names."
              }
            },
            "useAzureMonitorOnEdge": {
              "type": "bool",
              "metadata": {
                "description": "Controls whether observability is set up for IoT Edge."
              }
            },
            "version": {
              "type": "string",
              "defaultValue": "2.1.0",
              "metadata": {
                "description": "The Git version to use. Default is 2.1.0."
              }
            },
            "redisCacheName": {
              "type": "string",
              "metadata": {
                "description": "The name of the redis resource."
              }
            },
            "iotHubName": {
              "type": "string",
              "metadata": {
                "description": "The name of the iot hub resource."
              }
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "The storage account name."
              }
            }
          },
          "variables": {
            "appInsightName": "[format('{0}insight', parameters('uniqueSolutionPrefix'))]",
            "functionName": "[format('{0}function', parameters('uniqueSolutionPrefix'))]",
            "functionZipBinary": "[format('https://github.com/{0}/iotedge-lorawan-starterkit/releases/download/v{1}/function-{2}.zip', parameters('gitUsername'), parameters('version'), parameters('version'))]",
            "hostingPlanName": "[format('{0}plan', parameters('uniqueSolutionPrefix'))]",
            "iotHubOwnerPolicyName": "iothubowner",
            "logAnalyticsName": "[format('{0}log', parameters('uniqueSolutionPrefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[variables('hostingPlanName')]",
              "location": "[parameters('hostingPlanLocation')]",
              "sku": {
                "name": "[parameters('hostingPlanSkuName')]",
                "tier": "[parameters('hostingPlanSkuTier')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[variables('functionName')]",
              "location": "[parameters('hostingPlanLocation')]",
              "kind": "functionapp",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                  "connectionStrings": [
                    {
                      "name": "IoTHubConnectionString",
                      "type": "Custom",
                      "connectionString": "[format('HostName={0}.azure-devices.net;SharedAccessKeyName={1};SharedAccessKey={2}', parameters('iotHubName'), variables('iotHubOwnerPolicyName'), listKeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys', parameters('iotHubName'), variables('iotHubOwnerPolicyName')), '2017-01-19').primaryKey)]"
                    },
                    {
                      "name": "RedisConnectionString",
                      "type": "Custom",
                      "connectionString": "[format('{0}.redis.cache.windows.net,abortConnect=false,ssl=true,password={1}', parameters('redisCacheName'), listKeys(parameters('redisCacheName'), '2015-08-01').primaryKey)]"
                    }
                  ],
                  "appSettings": [
                    {
                      "name": "AzureWebJobsDashboard",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').key1)]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').key1)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').key1)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(variables('functionName'))]"
                    },
                    {
                      "name": "FACADE_HOST_NAME",
                      "value": "[toLower(variables('functionName'))]"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "DEPLOY_DEVICE",
                      "value": "[string(parameters('deployDevice'))]"
                    },
                    {
                      "name": "DEVICE_CONFIG_LOCATION",
                      "value": "[format('https://raw.githubusercontent.com/{0}/iotedge-lorawan-starterkit/v{1}/Template/deviceConfiguration.json', parameters('gitUsername'), parameters('version'))]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2015-05-01').InstrumentationKey]"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "[variables('functionZipBinary')]"
                    },
                    {
                      "name": "OBSERVABILITY_CONFIG_LOCATION",
                      "value": "[format('https://raw.githubusercontent.com/{0}/iotedge-lorawan-starterkit/v{1}/Template/observabilityConfiguration.json', parameters('gitUsername'), parameters('version'))]"
                    },
                    {
                      "name": "IOT_HUB_RESOURCE_ID",
                      "value": "[resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))]"
                    },
                    {
                      "name": "LOG_ANALYTICS_WORKSPACE_ID",
                      "value": "[if(parameters('useAzureMonitorOnEdge'), reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))).customerId, '')]"
                    },
                    {
                      "name": "LOG_ANALYTICS_WORKSPACE_KEY",
                      "value": "[if(parameters('useAzureMonitorOnEdge'), listKeys(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName')), '2021-06-01').primarySharedKey, '')]"
                    },
                    {
                      "name": "EU863_CONFIG_LOCATION",
                      "value": "[format('https://raw.githubusercontent.com/{0}/iotedge-lorawan-starterkit/v{1}/Tools/Cli-LoRa-Device-Provisioning/DefaultRouterConfig/EU863.json', parameters('gitUsername'), parameters('version'))]"
                    },
                    {
                      "name": "US902_CONFIG_LOCATION",
                      "value": "[format('https://raw.githubusercontent.com/{0}/iotedge-lorawan-starterkit/v{1}/Tools/Cli-LoRa-Device-Provisioning/DefaultRouterConfig/US902.json', parameters('gitUsername'), parameters('version'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'iotHub')]",
        "[resourceId('Microsoft.Resources/deployments', 'redisCache')]",
        "[resourceId('Microsoft.Resources/deployments', 'storage')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "discoveryService",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightName": {
            "value": "[format('{0}insight', parameters('uniqueSolutionPrefix'))]"
          },
          "discoveryZipUrl": {
            "value": "[parameters('discoveryZipUrl')]"
          },
          "iotHubHostName": {
            "value": "[reference(resourceId('Microsoft.Devices/IoTHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).hostName]"
          },
          "iotHubName": {
            "value": "[format('{0}hub', parameters('uniqueSolutionPrefix'))]"
          },
          "uniqueSolutionPrefix": {
            "value": "[parameters('uniqueSolutionPrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "16445089421244686378"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "sku": {
              "type": "string",
              "defaultValue": "B1"
            },
            "iotHubHostName": {
              "type": "string"
            },
            "discoveryZipUrl": {
              "type": "string"
            },
            "iotHubName": {
              "type": "string"
            },
            "appInsightName": {
              "type": "string"
            },
            "roleNameGuid": {
              "type": "string",
              "defaultValue": "[guid(resourceGroup().id, 'twincontributor')]"
            },
            "uniqueSolutionPrefix": {
              "type": "string"
            }
          },
          "variables": {
            "webAppName": "[format('{0}discovery', parameters('uniqueSolutionPrefix'))]",
            "hostingPlanName": "[format('{0}plan', variables('webAppName'))]",
            "iotHubTwinContributorRoleId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/494bdba2-168f-4f31-a0a1-191d2f7c028c', subscription().subscriptionId)]",
            "aspNetCoreUrls": "http://0.0.0.0:80;https://0.0.0.0:443",
            "webSitesApiVersion": "2021-03-01"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[variables('hostingPlanName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[variables('webAppName')]",
              "location": "[parameters('location')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "IotHubHostName",
                      "value": "[parameters('iotHubHostName')]"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "[parameters('discoveryZipUrl')]"
                    },
                    {
                      "name": "ASPNETCORE_URLS",
                      "value": "[variables('aspNetCoreUrls')]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightName')), '2015-05-01').InstrumentationKey]"
                    }
                  ],
                  "webSocketsEnabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Devices/IotHubs/{0}', parameters('iotHubName'))]",
              "name": "[parameters('roleNameGuid')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')), variables('webSitesApiVersion'), 'Full').identity.principalId]",
                "roleDefinitionId": "[variables('iotHubTwinContributorRoleId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
              ]
            }
          ]
        }
      }
    }
  ]
}