{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "12382712143284616971"
    }
  },
  "parameters": {
    "uniqueSolutionPrefix": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "discoveryZipUrl": {
      "type": "string"
    }
  },
  "variables": {
    "storageAccountName": "[format('{0}storage', parameters('uniqueSolutionPrefix'))]",
    "storageAccountType": "Storage",
    "credentialsContainerName": "stationcredentials",
    "firmwareUpgradesContainerName": "fwupgrades",
    "iotHubName": "[format('{0}hub', parameters('uniqueSolutionPrefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "iotHub",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('iotHubName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "3201515198599049156"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Devices/IotHubs",
              "apiVersion": "2021-07-02",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "capacity": 1,
                "name": "S1"
              }
            }
          ],
          "outputs": {
            "iotHubName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "storage",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "credentialsContainerName": {
            "value": "[variables('credentialsContainerName')]"
          },
          "firmwareUpgradesContainerName": {
            "value": "[variables('firmwareUpgradesContainerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "33589513142111750"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage account name."
              }
            },
            "storageAccountType": {
              "type": "string",
              "metadata": {
                "description": "Storage account type."
              }
            },
            "credentialsContainerName": {
              "type": "string"
            },
            "firmwareUpgradesContainerName": {
              "type": "string"
            }
          },
          "variables": {
            "FormattedCredentialsContainerName": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('credentialsContainerName'))]",
            "FormattedFirmwareUpgradesContainerName": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('firmwareUpgradesContainerName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[resourceGroup().location]",
              "kind": "[parameters('storageAccountType')]",
              "sku": {
                "name": "Premium_LRS"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[variables('FormattedCredentialsContainerName')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[variables('FormattedFirmwareUpgradesContainerName')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "redisCache",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "uniqueSolutionPrefix": {
            "value": "[parameters('uniqueSolutionPrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "2467296637881199132"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure location where to create the hosting plan. Default value is resource group location."
              }
            },
            "uniqueSolutionPrefix": {
              "type": "string",
              "metadata": {
                "description": "Prefix used for resource names. Should be unique as this will also be used for domain names."
              }
            }
          },
          "variables": {
            "redisCacheName": "[format('{0}redis', parameters('uniqueSolutionPrefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Cache/redis",
              "apiVersion": "2022-06-01",
              "name": "[variables('redisCacheName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "capacity": 0,
                  "family": "C",
                  "name": "Basic"
                }
              }
            }
          ],
          "outputs": {
            "redisCacheName": {
              "type": "string",
              "value": "[variables('redisCacheName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "function",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deployDevice": {
            "value": true
          },
          "uniqueSolutionPrefix": {
            "value": "[parameters('uniqueSolutionPrefix')]"
          },
          "useAzureMonitorOnEdge": {
            "value": true
          },
          "hostingPlanLocation": {
            "value": "[parameters('location')]"
          },
          "redisCacheName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'redisCache')).outputs.redisCacheName.value]"
          },
          "iotHubName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'iotHub')).outputs.iotHubName.value]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage')).outputs.storageAccountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "12904667451697805285"
            }
          },
          "parameters": {
            "deployDevice": {
              "type": "bool",
              "metadata": {
                "description": "Provision a final LoRa device in the IoT hub in addition to the gateway."
              }
            },
            "gitUsername": {
              "type": "string",
              "defaultValue": "Azure",
              "metadata": {
                "description": "The Git Username. Default is Azure."
              }
            },
            "hostingPlanLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The Azure location where to create the hosting plan. Default value is resource group location."
              }
            },
            "hostingPlanSkuName": {
              "type": "string",
              "defaultValue": "Y1",
              "metadata": {
                "description": "Hosting plan SKU. Default is Y1."
              }
            },
            "hostingPlanSkuTier": {
              "type": "string",
              "defaultValue": "Dynamic",
              "metadata": {
                "description": "Hosting Plan SKU tiers. Default value is Dynamic."
              }
            },
            "uniqueSolutionPrefix": {
              "type": "string",
              "metadata": {
                "description": "Prefix used for resource names. Should be unique as this will also be used for domain names."
              }
            },
            "useAzureMonitorOnEdge": {
              "type": "bool",
              "metadata": {
                "description": "Controls whether observability is set up for IoT Edge."
              }
            },
            "version": {
              "type": "string",
              "defaultValue": "2.1.0",
              "metadata": {
                "description": "The Git version to use. Default is 2.1.0."
              }
            },
            "redisCacheName": {
              "type": "string",
              "metadata": {
                "description": "The name of the redis resource."
              }
            },
            "iotHubName": {
              "type": "string",
              "metadata": {
                "description": "The name of the iot hub resource."
              }
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "The storage account name."
              }
            }
          },
          "variables": {
            "appInsightName": "[format('{0}insight', parameters('uniqueSolutionPrefix'))]",
            "functionName": "[format('{0}function', parameters('uniqueSolutionPrefix'))]",
            "functionZipBinary": "[format('https://github.com/{0}/iotedge-lorawan-starterkit/releases/download/v{1}/function-{2}.zip', parameters('gitUsername'), parameters('version'), parameters('version'))]",
            "hostingPlanName": "[format('{0}plan', parameters('uniqueSolutionPrefix'))]",
            "iotHubOwnerPolicyName": "iothubowner",
            "logAnalyticsName": "[format('{0}log', parameters('uniqueSolutionPrefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[variables('hostingPlanName')]",
              "location": "[parameters('hostingPlanLocation')]",
              "sku": {
                "name": "[parameters('hostingPlanSkuName')]",
                "tier": "[parameters('hostingPlanSkuTier')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[variables('functionName')]",
              "location": "[parameters('hostingPlanLocation')]",
              "kind": "functionapp",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                  "connectionStrings": [
                    {
                      "name": "IoTHubConnectionString",
                      "type": "Custom",
                      "connectionString": "[format('HostName={0}.azure-devices.net;SharedAccessKeyName={1};SharedAccessKey={2}', parameters('iotHubName'), variables('iotHubOwnerPolicyName'), listKeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys', parameters('iotHubName'), variables('iotHubOwnerPolicyName')), '2017-01-19').primaryKey)]"
                    },
                    {
                      "name": "RedisConnectionString",
                      "type": "Custom",
                      "connectionString": "[format('{0}.redis.cache.windows.net,abortConnect=false,ssl=true,password={1}', parameters('redisCacheName'), listKeys(parameters('redisCacheName'), '2015-08-01').primaryKey)]"
                    }
                  ],
                  "appSettings": [
                    {
                      "name": "AzureWebJobsDashboard",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').key1)]"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').key1)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').key1)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(variables('functionName'))]"
                    },
                    {
                      "name": "FACADE_HOST_NAME",
                      "value": "[toLower(variables('functionName'))]"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "DEPLOY_DEVICE",
                      "value": "[string(parameters('deployDevice'))]"
                    },
                    {
                      "name": "DEVICE_CONFIG_LOCATION",
                      "value": "[format('https://raw.githubusercontent.com/{0}/iotedge-lorawan-starterkit/v{1}/Template/deviceConfiguration.json', parameters('gitUsername'), parameters('version'))]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2015-05-01').InstrumentationKey]"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "[variables('functionZipBinary')]"
                    },
                    {
                      "name": "OBSERVABILITY_CONFIG_LOCATION",
                      "value": "[format('https://raw.githubusercontent.com/{0}/iotedge-lorawan-starterkit/v{1}/Template/observabilityConfiguration.json', parameters('gitUsername'), parameters('version'))]"
                    },
                    {
                      "name": "IOT_HUB_RESOURCE_ID",
                      "value": "[resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))]"
                    },
                    {
                      "name": "LOG_ANALYTICS_WORKSPACE_ID",
                      "value": "[if(parameters('useAzureMonitorOnEdge'), reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))).customerId, '')]"
                    },
                    {
                      "name": "LOG_ANALYTICS_WORKSPACE_KEY",
                      "value": "[if(parameters('useAzureMonitorOnEdge'), listKeys(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName')), '2021-06-01').primarySharedKey, '')]"
                    },
                    {
                      "name": "EU863_CONFIG_LOCATION",
                      "value": "[format('https://raw.githubusercontent.com/{0}/iotedge-lorawan-starterkit/v{1}/Tools/Cli-LoRa-Device-Provisioning/DefaultRouterConfig/EU863.json', parameters('gitUsername'), parameters('version'))]"
                    },
                    {
                      "name": "US902_CONFIG_LOCATION",
                      "value": "[format('https://raw.githubusercontent.com/{0}/iotedge-lorawan-starterkit/v{1}/Tools/Cli-LoRa-Device-Provisioning/DefaultRouterConfig/US902.json', parameters('gitUsername'), parameters('version'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'iotHub')]",
        "[resourceId('Microsoft.Resources/deployments', 'redisCache')]",
        "[resourceId('Microsoft.Resources/deployments', 'storage')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "observability",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prefix": {
            "value": "[parameters('uniqueSolutionPrefix')]"
          },
          "iotHubName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'iotHub')).outputs.iotHubName.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "7463052704421272587"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "iotHubName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}analytics', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "retentionInDays": 30,
                "sku": {
                  "name": "PerGB2018"
                },
                "workspaceCapping": {
                  "dailyQuotaGb": 10
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[format('{0}insight', parameters('prefix'))]",
              "kind": "web",
              "location": "[parameters('location')]",
              "properties": {
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}analytics', parameters('prefix')))]",
                "Application_Type": "web"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}analytics', parameters('prefix')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "workbook",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "appInsightsResourceId": {
                    "value": "[resourceId('Microsoft.Insights/components', format('{0}insight', parameters('prefix')))]"
                  },
                  "iotHubResourceId": {
                    "value": "[resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))]"
                  }
                },
                "template": {
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "iotHubResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The id of IoT Hub instance to which the workbook will be associated"
                      }
                    },
                    "appInsightsResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "The id of Application Insights instance to which the workbook will be associated for fetching telemetry entries"
                      }
                    },
                    "workbookDisplayName": {
                      "type": "string",
                      "defaultValue": "StarterKitWorkbook",
                      "metadata": {
                        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
                      }
                    },
                    "workbookType": {
                      "type": "string",
                      "defaultValue": "workbook",
                      "metadata": {
                        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
                      }
                    },
                    "workbookId": {
                      "type": "string",
                      "defaultValue": "[newGuid()]",
                      "metadata": {
                        "description": "The unique guid for this workbook instance"
                      }
                    }
                  },
                  "variables": {
                    "workbookSourceId": "[parameters('iotHubResourceId')]",
                    "workbookType": "workbook",
                    "workbookContent": {
                      "version": "Notebook/1.0",
                      "items": [
                        {
                          "type": 9,
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "parameters": [
                              {
                                "id": "31596d7b-c0a9-448f-b3cc-a3a906cb9d48",
                                "version": "KqlParameterItem/1.0",
                                "name": "resourceType",
                                "type": 7,
                                "isRequired": true,
                                "isGlobal": true,
                                "value": "Microsoft.Devices/IotHubs",
                                "isHiddenWhenLocked": true,
                                "typeSettings": {
                                  "additionalResourceOptions": [],
                                  "showDefault": false
                                },
                                "jsonData": "[[\"Microsoft.Devices/IotHubs\"]",
                                "defaultValue": "value::1"
                              },
                              {
                                "id": "bebd5be4-3d61-45ed-9f07-b9ae091e1ccb",
                                "version": "KqlParameterItem/1.0",
                                "name": "resource",
                                "type": 5,
                                "isRequired": true,
                                "isHiddenWhenLocked": true,
                                "typeSettings": {
                                  "resourceTypeFilter": {
                                    "microsoft.devices/iothubs": true
                                  },
                                  "additionalResourceOptions": [
                                    "value::1"
                                  ],
                                  "showDefault": false
                                },
                                "defaultValue": "value::1"
                              },
                              {
                                "id": "d062cb40-2eed-4917-ab42-8f271db98312",
                                "version": "KqlParameterItem/1.0",
                                "name": "InsightsMetricsExists",
                                "type": 1,
                                "query": "let hasNonEmptyTable = (T:string) \n{ \n   toscalar( union isfuzzy=true ( table(T) | count as Count ), (print Count=0) | summarize sum(Count) ) > 0\n};\nlet TableName = 'InsightsMetrics';\nprint IsPresent=iif(hasNonEmptyTable(TableName), \"yes\", \"no\")",
                                "crossComponentResources": [
                                  "{resource}"
                                ],
                                "isHiddenWhenLocked": true,
                                "timeContext": {
                                  "durationMs": 259200000
                                },
                                "queryType": 0,
                                "resourceType": "{resourceType}"
                              },
                              {
                                "id": "36a641eb-587a-40c0-b491-b7b2f85eb0c0",
                                "version": "KqlParameterItem/1.0",
                                "name": "mainAction",
                                "type": 1,
                                "isGlobal": true,
                                "value": "devicelist",
                                "isHiddenWhenLocked": true
                              },
                              {
                                "id": "4ea30d03-74c2-4b08-bf00-f3c0a4c57f13",
                                "version": "KqlParameterItem/1.0",
                                "name": "alertResources",
                                "type": 5,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "typeSettings": {
                                  "resourceTypeFilter": {
                                    "microsoft.devices/iothubs": true,
                                    "microsoft.insights/components": true
                                  },
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "showDefault": false
                                },
                                "defaultValue": "value::all"
                              },
                              {
                                "id": "6f896f81-18dc-4307-98f3-77927af019af",
                                "version": "KqlParameterItem/1.0",
                                "name": "appInsightsResourceId",
                                "type": 5,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "typeSettings": {
                                  "resourceTypeFilter": {
                                    "microsoft.insights/components": true
                                  },
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ]
                                },
                                "defaultValue": "value::all"
                              },
                              {
                                "id": "dcd93c30-5162-4e48-bb6a-f347e466e552",
                                "version": "KqlParameterItem/1.0",
                                "name": "Subscription",
                                "type": 6,
                                "isRequired": true,
                                "multiSelect": true,
                                "quote": "'",
                                "delimiter": ",",
                                "typeSettings": {
                                  "additionalResourceOptions": [
                                    "value::all"
                                  ],
                                  "showDefault": false
                                },
                                "jsonData": "[concat('[\"', subscription().id, '\"]')]",
                                "defaultValue": "value::all"
                              }
                            ],
                            "style": "pills",
                            "queryType": 0,
                            "resourceType": "microsoft.insights/components"
                          },
                          "conditionalVisibility": {
                            "parameterName": "neverset",
                            "comparison": "isNotEqualTo"
                          },
                          "name": "parameters - 5"
                        },
                        {
                          "type": 9,
                          "content": {
                            "version": "KqlParameterItem/1.0",
                            "crossComponentResources": [
                              "{appInsightsResourceId}"
                            ],
                            "parameters": [
                              {
                                "id": "1b4b2d2e-4f2e-4881-903d-f307d6958a1c",
                                "version": "KqlParameterItem/1.0",
                                "name": "timeRange",
                                "label": "Time range",
                                "type": 4,
                                "isRequired": true,
                                "isGlobal": true,
                                "value": {
                                  "durationMs": 14400000
                                },
                                "typeSettings": {
                                  "selectableValues": [
                                    {
                                      "durationMs": 1800000
                                    },
                                    {
                                      "durationMs": 3600000
                                    },
                                    {
                                      "durationMs": 14400000
                                    },
                                    {
                                      "durationMs": 43200000
                                    },
                                    {
                                      "durationMs": 86400000
                                    },
                                    {
                                      "durationMs": 172800000
                                    },
                                    {
                                      "durationMs": 259200000
                                    },
                                    {
                                      "durationMs": 604800000
                                    },
                                    {
                                      "durationMs": 1209600000
                                    },
                                    {
                                      "durationMs": 2592000000
                                    }
                                  ],
                                  "allowCustom": true
                                }
                              }
                            ],
                            "style": "pills",
                            "queryType": 0,
                            "resourceType": "{resourceType}"
                          },
                          "customWidth": "30",
                          "conditionalVisibility": {
                            "parameterName": "InsightsMetricsExists",
                            "comparison": "isEqualTo",
                            "value": "yes"
                          },
                          "name": "Time Range"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Overview - Failure Indicators",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let connectivityLost = customMetrics\r\n| where name == \"StationConnectivityLost\"\r\n| project name, valueSum\r\n| summarize Count = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"StationConnectivityLost\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (connectivityLost) on name\r\n| project-away name, timestamp",
                                  "size": 4,
                                  "noDataMessage": "No connections lost",
                                  "noDataMessageStyle": 3,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "name1",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "Count",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "hotCold"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 0,
                                          "maximumSignificantDigits": 3
                                        }
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "red"
                                      }
                                    },
                                    "showBorder": false
                                  }
                                },
                                "customWidth": "15",
                                "name": "Station Connectivity Lost"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let receiveWindowMisses = customMetrics\r\n| where name == \"ReceiveWindowMisses\"\r\n| order by timestamp desc\r\n| project name, valueSum\r\n| summarize Sum = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"ReceiveWindowMisses\"\r\n| make-series Trend = sum(valueSum) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (receiveWindowMisses) on name\r\n| project-away name, timestamp",
                                  "size": 4,
                                  "noDataMessage": "No receive windows missed",
                                  "noDataMessageStyle": 3,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "name1"
                                    },
                                    "leftContent": {
                                      "columnMatch": "Sum",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "hotCold"
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "red"
                                      }
                                    },
                                    "showBorder": false,
                                    "size": "auto"
                                  }
                                },
                                "customWidth": "15",
                                "name": "Receive Windows"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let unhandledExceptions = customMetrics\r\n| where name == \"UnhandledExceptions\"\r\n| project name, valueSum, exceptionKeyword = \"Exception\"\r\n| summarize Count = sum(valueSum) by name, exceptionKeyword\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"UnhandledExceptions\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (unhandledExceptions) on name\r\n| project-away name, timestamp",
                                  "size": 4,
                                  "noDataMessage": "No unhandled exceptions detected",
                                  "noDataMessageStyle": 3,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "name1",
                                      "formatter": 1,
                                      "formatOptions": {
                                        "linkColumn": "exceptionKeyword",
                                        "linkTarget": "Search"
                                      }
                                    },
                                    "leftContent": {
                                      "columnMatch": "Count",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "hotCold"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2,
                                          "maximumSignificantDigits": 3
                                        }
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "red"
                                      }
                                    },
                                    "showBorder": false
                                  }
                                },
                                "customWidth": "15",
                                "name": "Unhandled Exceptions"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let c2dmessagesTooLong = customMetrics\r\n| where name == \"C2DMessageTooLong\"\r\n| project name, valueSum\r\n| summarize Count = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"C2DMessageTooLong\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (c2dmessagesTooLong) on name\r\n| project-away name, timestamp",
                                  "size": 4,
                                  "noDataMessage": "No C2D messages that were too long detected",
                                  "noDataMessageStyle": 3,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "name1"
                                    },
                                    "leftContent": {
                                      "columnMatch": "Sum",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "hotCold"
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "red"
                                      }
                                    },
                                    "showBorder": false,
                                    "size": "auto"
                                  }
                                },
                                "customWidth": "15",
                                "name": "C2DMessageTooLong"
                              }
                            ]
                          },
                          "name": "Overview - Failure Indicators"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Overview - Performance Indicators",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let activeConnections = customMetrics\r\n| where name == \"ActiveStationConnections\"\r\n| order by timestamp desc\r\n| project value, name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"ActiveStationConnections\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (activeConnections) on name\r\n| project-away name, timestamp\r\n\r\n\r\n",
                                  "size": 4,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "name1",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "value",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal",
                                          "useGrouping": false,
                                          "maximumFractionDigits": 0,
                                          "maximumSignificantDigits": 3
                                        }
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "blue"
                                      }
                                    },
                                    "showBorder": false,
                                    "size": "auto"
                                  }
                                },
                                "customWidth": "15",
                                "name": "Active Station Connections"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let deliveryLatency = customMetrics\r\n| where name == \"D2CMessageDeliveryLatency\"\r\n| order by timestamp desc\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"D2CMessageDeliveryLatency\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (deliveryLatency) on name\r\n| project-away name, timestamp",
                                  "size": 4,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "name1",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "value",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 23,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2,
                                          "maximumSignificantDigits": 3
                                        }
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "blue"
                                      }
                                    },
                                    "showBorder": false,
                                    "size": "auto"
                                  }
                                },
                                "customWidth": "15",
                                "name": "Delivery Latencies"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let joinRequests = customMetrics\r\n| where name == \"JoinRequests\"\r\n| order by timestamp desc\r\n| project name, valueSum\r\n| summarize JoinRequestSum = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"JoinRequests\"\r\n| make-series Trend = sum(valueSum) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (joinRequests) on name\r\n| project-away name, timestamp",
                                  "size": 4,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "name1",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "JoinRequestSum",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2,
                                          "maximumSignificantDigits": 3
                                        }
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Trend",
                                      "formatter": 9,
                                      "formatOptions": {
                                        "palette": "blue"
                                      }
                                    },
                                    "showBorder": false,
                                    "size": "auto"
                                  }
                                },
                                "customWidth": "15",
                                "name": "Join requests"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let messageSizes = customMetrics\r\n| where name == \"D2CMessageSize\"\r\n| order by timestamp desc\r\n| summarize D2CMessageSize = avg(value) by name;\r\ncustomMetrics\r\n| where name == \"D2CMessageSize\"\r\n| make-series Hist = sum(valueSum) default = 0 on value from 5.0 to 250.0 step 5.0 by name\r\n| join (messageSizes) on name",
                                  "size": 4,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "name1",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "D2CMessageSize",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 2,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2,
                                          "maximumSignificantDigits": 3
                                        }
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Hist",
                                      "formatter": 10,
                                      "formatOptions": {
                                        "palette": "blue"
                                      }
                                    },
                                    "showBorder": false,
                                    "size": "auto"
                                  }
                                },
                                "customWidth": "15",
                                "name": "D2C message size"
                              },
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let sum = customMetrics\r\n| where name == \"D2CMessagesReceived\"\r\n| order by timestamp desc\r\n| project name, valueSum\r\n| summarize Sum = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"D2CMessagesReceived\"\r\n| make-series Trend = sum(valueSum) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (sum) on name\r\n| project-away name, timestamp",
                                  "size": 4,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "visualization": "tiles",
                                  "tileSettings": {
                                    "titleContent": {
                                      "columnMatch": "name1",
                                      "formatter": 1
                                    },
                                    "leftContent": {
                                      "columnMatch": "Sum",
                                      "formatter": 12,
                                      "formatOptions": {
                                        "palette": "auto"
                                      },
                                      "numberFormat": {
                                        "unit": 17,
                                        "options": {
                                          "style": "decimal",
                                          "maximumFractionDigits": 2,
                                          "maximumSignificantDigits": 3
                                        }
                                      }
                                    },
                                    "secondaryContent": {
                                      "columnMatch": "Trend",
                                      "formatter": 10,
                                      "formatOptions": {
                                        "palette": "blue"
                                      }
                                    },
                                    "showBorder": false
                                  }
                                },
                                "customWidth": "15",
                                "name": "D2CMessagesReceived"
                              }
                            ]
                          },
                          "name": "Overview - Performance Indicators"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Dependencies",
                            "items": [
                              {
                                "type": 3,
                                "content": {
                                  "version": "KqlItem/1.0",
                                  "query": "let rawData = dependencies\r\n| project duration, name, type, timestamp, EndpointWithoutDeviceId = extract(\"(.*)/[0-9a-zA-Z]{16}$\", 1, name)\r\n| project duration, type, timestamp, Endpoint = iff(isempty(EndpointWithoutDeviceId), name, EndpointWithoutDeviceId);\r\nlet history = rawData\r\n| make-series avg(duration) default=0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Endpoint\r\n| project-away timestamp;\r\nrawData\r\n| summarize Mean = avg(duration), (p95) = percentiles(duration, 95), Requests = count() by type, Endpoint\r\n| join (history) on Endpoint\r\n| order by Requests desc",
                                  "size": 3,
                                  "timeContext": {
                                    "durationMs": 14400000
                                  },
                                  "timeContextFromParameter": "timeRange",
                                  "queryType": 0,
                                  "resourceType": "microsoft.insights/components",
                                  "crossComponentResources": [
                                    "{appInsightsResourceId}"
                                  ],
                                  "gridSettings": {
                                    "formatters": [
                                      {
                                        "columnMatch": "Mean",
                                        "formatter": 0,
                                        "numberFormat": {
                                          "unit": 23,
                                          "options": {
                                            "style": "decimal",
                                            "minimumSignificantDigits": 3,
                                            "maximumSignificantDigits": 3
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "p95",
                                        "formatter": 0,
                                        "numberFormat": {
                                          "unit": 23,
                                          "options": {
                                            "style": "decimal",
                                            "minimumSignificantDigits": 3,
                                            "maximumSignificantDigits": 3
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "Requests",
                                        "formatter": 0,
                                        "numberFormat": {
                                          "unit": 17,
                                          "options": {
                                            "style": "decimal"
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "Endpoint1",
                                        "formatter": 5
                                      },
                                      {
                                        "columnMatch": "avg_duration",
                                        "formatter": 10,
                                        "formatOptions": {
                                          "palette": "blue"
                                        },
                                        "numberFormat": {
                                          "unit": 23,
                                          "options": {
                                            "style": "decimal"
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "Median",
                                        "formatter": 0,
                                        "numberFormat": {
                                          "unit": 23,
                                          "options": {
                                            "style": "decimal",
                                            "minimumSignificantDigits": 3,
                                            "maximumSignificantDigits": 3
                                          }
                                        }
                                      },
                                      {
                                        "columnMatch": "p80",
                                        "formatter": 0,
                                        "numberFormat": {
                                          "unit": 23,
                                          "options": {
                                            "style": "decimal",
                                            "minimumSignificantDigits": 3,
                                            "maximumSignificantDigits": 3
                                          }
                                        }
                                      }
                                    ],
                                    "labelSettings": [
                                      {
                                        "columnId": "type",
                                        "label": "Type"
                                      },
                                      {
                                        "columnId": "avg_duration",
                                        "label": "Average Duration (history)"
                                      }
                                    ]
                                  }
                                },
                                "name": "Dependency durations"
                              }
                            ]
                          },
                          "name": "Dependencies"
                        },
                        {
                          "type": 12,
                          "content": {
                            "version": "NotebookGroup/1.0",
                            "groupType": "editable",
                            "title": "Fleet Overview",
                            "items": [
                              {
                                "type": 11,
                                "content": {
                                  "version": "LinkItem/1.0",
                                  "style": "tabs",
                                  "links": [
                                    {
                                      "id": "9ba0a0e8-584b-421a-85e6-96c89eda5a17",
                                      "cellValue": "mainAction",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Devices",
                                      "subTarget": "devicelist",
                                      "style": "link"
                                    },
                                    {
                                      "id": "3b8d77da-20d0-499a-b62d-25f5c6a88a55",
                                      "cellValue": "mainAction",
                                      "linkTarget": "parameter",
                                      "linkLabel": "Alerts",
                                      "subTarget": "alerts",
                                      "style": "link"
                                    }
                                  ]
                                },
                                "customWidth": "25",
                                "conditionalVisibility": {
                                  "parameterName": "InsightsMetricsExists",
                                  "comparison": "isEqualTo",
                                  "value": "yes"
                                },
                                "name": "links - 8 - Copy"
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "template",
                                  "loadFromTemplateId": "Community-Workbooks/IoTHub/IoT Edge",
                                  "items": [],
                                  "exportParameters": true
                                },
                                "conditionalVisibilities": [
                                  {
                                    "parameterName": "InsightsMetricsExists",
                                    "comparison": "isEqualTo",
                                    "value": "yes"
                                  },
                                  {
                                    "parameterName": "mainAction",
                                    "comparison": "isEqualTo",
                                    "value": "devicelist"
                                  }
                                ],
                                "name": "device-group",
                                "styleSettings": {
                                  "showBorder": true
                                }
                              },
                              {
                                "type": 12,
                                "content": {
                                  "version": "NotebookGroup/1.0",
                                  "groupType": "editable",
                                  "items": [
                                    {
                                      "type": 9,
                                      "content": {
                                        "version": "KqlParameterItem/1.0",
                                        "parameters": [
                                          {
                                            "id": "bd6d6075-dc8f-43d3-829f-7e2245a3eb21",
                                            "version": "KqlParameterItem/1.0",
                                            "name": "State",
                                            "type": 2,
                                            "isRequired": true,
                                            "multiSelect": true,
                                            "quote": "'",
                                            "delimiter": ",",
                                            "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"New\\\", \\\"label\\\": \\\"New\\\"},\\r\\n    {\\\"id\\\":\\\"Acknowledged\\\", \\\"label\\\": \\\"Acknowledged\\\"},\\r\\n    {\\\"id\\\":\\\"Closed\\\", \\\"label\\\": \\\"Closed\\\"}\\r\\n]\",\"transformers\":null}",
                                            "crossComponentResources": [
                                              "{Subscription}"
                                            ],
                                            "value": [
                                              "value::all"
                                            ],
                                            "typeSettings": {
                                              "additionalResourceOptions": [
                                                "value::all"
                                              ],
                                              "selectAllValue": "*",
                                              "showDefault": false
                                            },
                                            "queryType": 8
                                          }
                                        ],
                                        "style": "above",
                                        "queryType": 0,
                                        "resourceType": "microsoft.insights/components"
                                      },
                                      "customWidth": "0",
                                      "name": "parameters",
                                      "styleSettings": {
                                        "margin": "10px 0px 0px 10px"
                                      }
                                    },
                                    {
                                      "type": 12,
                                      "content": {
                                        "version": "NotebookGroup/1.0",
                                        "groupType": "editable",
                                        "items": [
                                          {
                                            "type": 12,
                                            "content": {
                                              "version": "NotebookGroup/1.0",
                                              "groupType": "editable",
                                              "items": [
                                                {
                                                  "type": 3,
                                                  "content": {
                                                    "version": "KqlItem/1.0",
                                                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}\r\n| where \"*\" in ({alertResources}) or properties.essentials.targetResource in~ ({alertResources})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| summarize Count=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\") \r\nby Severity=tostring(properties.essentials.severity)\r\n| order by Severity asc",
                                                    "size": 3,
                                                    "noDataMessage": "No alerts found",
                                                    "noDataMessageStyle": 3,
                                                    "exportMultipleValues": true,
                                                    "exportedParameters": [
                                                      {
                                                        "fieldName": "Severity",
                                                        "parameterName": "Severity",
                                                        "parameterType": 1
                                                      }
                                                    ],
                                                    "queryType": 1,
                                                    "resourceType": "microsoft.resourcegraph/resources",
                                                    "crossComponentResources": [
                                                      "{Subscription}"
                                                    ],
                                                    "visualization": "table"
                                                  },
                                                  "name": "Alerts summary"
                                                }
                                              ],
                                              "exportParameters": true
                                            },
                                            "conditionalVisibility": {
                                              "parameterName": "Subscription",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "alert-summary-group"
                                          },
                                          {
                                            "type": 12,
                                            "content": {
                                              "version": "NotebookGroup/1.0",
                                              "groupType": "editable",
                                              "items": [
                                                {
                                                  "type": 11,
                                                  "content": {
                                                    "version": "LinkItem/1.0",
                                                    "style": "tabs",
                                                    "links": [
                                                      {
                                                        "id": "b4b81349-14f3-49a1-91df-701be106b46a",
                                                        "cellValue": "tab",
                                                        "linkTarget": "parameter",
                                                        "linkLabel": "Alert Details",
                                                        "subTarget": "details",
                                                        "preText": "Alert Details",
                                                        "style": "link"
                                                      },
                                                      {
                                                        "id": "7e0cfa3e-5858-4016-adf1-3695c714d915",
                                                        "cellValue": "tab",
                                                        "linkTarget": "parameter",
                                                        "linkLabel": "Alerts by Region",
                                                        "subTarget": "region",
                                                        "style": "link"
                                                      }
                                                    ]
                                                  },
                                                  "name": "links - 2"
                                                },
                                                {
                                                  "type": 3,
                                                  "content": {
                                                    "version": "KqlItem/1.0",
                                                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend Severity=tostring(properties.essentials.severity)\r\n| where Severity in ({Severity})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), Severity, State=tostring(properties.essentials.alertState), Name=name, TargetResource = tostring(properties.essentials.targetResource), MonitorService = tostring(properties.essentials.monitorService), SignalType=tostring(properties.essentials.signalType), Description=tostring(properties.essentials.description)\r\n",
                                                    "size": 3,
                                                    "showExportToExcel": true,
                                                    "queryType": 1,
                                                    "resourceType": "microsoft.resourcegraph/resources",
                                                    "crossComponentResources": [
                                                      "{Subscription}"
                                                    ],
                                                    "visualization": "table",
                                                    "gridSettings": {
                                                      "formatters": [
                                                        {
                                                          "columnMatch": "AlertId",
                                                          "formatter": 5
                                                        },
                                                        {
                                                          "columnMatch": "StartTime",
                                                          "formatter": 6
                                                        },
                                                        {
                                                          "columnMatch": "Severity",
                                                          "formatter": 11
                                                        },
                                                        {
                                                          "columnMatch": "Name",
                                                          "formatter": 1,
                                                          "formatOptions": {
                                                            "linkTarget": "OpenBlade",
                                                            "bladeOpenContext": {
                                                              "bladeName": "AlertDetailsTemplateBlade",
                                                              "extensionName": "Microsoft_Azure_Monitoring",
                                                              "bladeParameters": [
                                                                {
                                                                  "name": "alertId",
                                                                  "source": "column",
                                                                  "value": "AlertId"
                                                                },
                                                                {
                                                                  "name": "alertName",
                                                                  "source": "column",
                                                                  "value": "Name"
                                                                },
                                                                {
                                                                  "name": "invokedFrom",
                                                                  "source": "static",
                                                                  "value": "Workbooks"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          "tooltipFormat": {
                                                            "tooltip": "View alert details"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "conditionalVisibilities": [
                                                    {
                                                      "parameterName": "Severity",
                                                      "comparison": "isNotEqualTo"
                                                    },
                                                    {
                                                      "parameterName": "tab",
                                                      "comparison": "isEqualTo",
                                                      "value": "details"
                                                    }
                                                  ],
                                                  "name": "Alert details"
                                                },
                                                {
                                                  "type": 3,
                                                  "content": {
                                                    "version": "KqlItem/1.0",
                                                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({alertResources}) or properties.essentials.targetResource in~ ({alertResources})\r\n| summarize Alerts=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\")\r\nby Resource=tostring(properties.essentials.targetResource )\r\n| order by Alerts desc\r\n",
                                                    "size": 3,
                                                    "title": "Alerts by Region",
                                                    "noDataMessage": "No alerts",
                                                    "noDataMessageStyle": 3,
                                                    "queryType": 1,
                                                    "resourceType": "microsoft.resourcegraph/resources",
                                                    "crossComponentResources": [
                                                      "{Subscription}"
                                                    ],
                                                    "visualization": "map",
                                                    "mapSettings": {
                                                      "locInfo": "AzureResource",
                                                      "locInfoColumn": "Resource",
                                                      "sizeSettings": "Alerts",
                                                      "sizeAggregation": "Sum",
                                                      "legendMetric": "Alerts",
                                                      "legendAggregation": "Sum",
                                                      "itemColorSettings": {
                                                        "nodeColorField": "Alerts",
                                                        "colorAggregation": "Sum",
                                                        "type": "heatmap",
                                                        "heatmapPalette": "greenRed"
                                                      }
                                                    }
                                                  },
                                                  "conditionalVisibility": {
                                                    "parameterName": "tab",
                                                    "comparison": "isEqualTo",
                                                    "value": "region"
                                                  },
                                                  "name": "Alerts map"
                                                }
                                              ]
                                            },
                                            "conditionalVisibility": {
                                              "parameterName": "Severity",
                                              "comparison": "isNotEqualTo"
                                            },
                                            "name": "visible if severity selected"
                                          }
                                        ]
                                      },
                                      "conditionalVisibility": {
                                        "parameterName": "Subscription",
                                        "comparison": "isNotEqualTo"
                                      },
                                      "name": "visible if subscriptions selected"
                                    }
                                  ],
                                  "exportParameters": true
                                },
                                "conditionalVisibility": {
                                  "parameterName": "mainAction",
                                  "comparison": "isEqualTo",
                                  "value": "alerts"
                                },
                                "name": "alerts-group",
                                "styleSettings": {
                                  "margin": "15px 0px",
                                  "showBorder": true
                                }
                              }
                            ]
                          },
                          "name": "Fleet Overview"
                        }
                      ],
                      "isLocked": false,
                      "defaultResourceIds": [
                        "[parameters('appInsightsResourceId')]",
                        "[parameters('iotHubResourceId')]",
                        "[subscription().id]"
                      ],
                      "fallbackResourceIds": [
                        "[parameters('appInsightsResourceId')]",
                        "[parameters('iotHubResourceId')]",
                        "[subscription().id]"
                      ],
                      "fromTemplateId": "community-Workbooks/IoTHub/IoT Edge"
                    }
                  },
                  "resources": [
                    {
                      "name": "[parameters('workbookId')]",
                      "type": "microsoft.insights/workbooks",
                      "location": "[resourceGroup().location]",
                      "apiVersion": "2021-03-08",
                      "dependsOn": [],
                      "kind": "shared",
                      "properties": {
                        "displayName": "[parameters('workbookDisplayName')]",
                        "serializedData": "[string(variables('workbookContent'))]",
                        "version": "1.0",
                        "sourceId": "[variables('workbookSourceId')]",
                        "category": "[variables('workbookType')]"
                      }
                    }
                  ],
                  "outputs": {
                    "workbookId": {
                      "type": "string",
                      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
                    }
                  },
                  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', format('{0}insight', parameters('prefix')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "azureMonitorAlerts",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "appInsightName": {
                    "value": "[format('{0}insight', parameters('prefix'))]"
                  },
                  "iotHubName": {
                    "value": "[parameters('iotHubName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "appInsightName": {
                      "type": "String"
                    },
                    "iotHubName": {
                      "type": "String"
                    }
                  },
                  "variables": {
                    "ai_scope_resource_id": "[resourceId('microsoft.insights/components/', parameters('appInsightName'))]",
                    "iot_hub_scope_resource_id": "[resourceId('microsoft.devices/iothubs/', parameters('iotHubName'))]",
                    "alertSensitivity": "Medium",
                    "evaluationPeriods": 4,
                    "failingPeriods": 4,
                    "metricNamespace": "LoRaWan",
                    "evaluationFrequency": "PT1H",
                    "aggregationPeriod": "PT1H"
                  },
                  "resources": [
                    {
                      "type": "microsoft.insights/metricAlerts",
                      "apiVersion": "2018-03-01",
                      "name": "High Upstream Message Latency",
                      "location": "global",
                      "properties": {
                        "description": "High device message processing time (throughput)",
                        "severity": 2,
                        "enabled": true,
                        "scopes": [
                          "[variables('ai_scope_resource_id')]"
                        ],
                        "evaluationFrequency": "[variables('evaluationFrequency')]",
                        "windowSize": "[variables('aggregationPeriod')]",
                        "criteria": {
                          "allOf": [
                            {
                              "alertSensitivity": "[variables('alertSensitivity')]",
                              "failingPeriods": {
                                "numberOfEvaluationPeriods": "[variables('evaluationPeriods')]",
                                "minFailingPeriodsToAlert": "[variables('failingPeriods')]"
                              },
                              "name": "Metric1",
                              "metricNamespace": "[variables('metricNamespace')]",
                              "metricName": "D2CMessageDeliveryLatency",
                              "dimensions": [
                                {
                                  "name": "GatewayId",
                                  "operator": "Include",
                                  "values": [
                                    "*"
                                  ]
                                }
                              ],
                              "operator": "GreaterThan",
                              "timeAggregation": "Average",
                              "criterionType": "DynamicThresholdCriterion",
                              "skipMetricValidation": true
                            }
                          ],
                          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                        },
                        "autoMitigate": true,
                        "targetResourceType": "microsoft.insights/components",
                        "actions": []
                      }
                    },
                    {
                      "type": "microsoft.insights/metricAlerts",
                      "apiVersion": "2018-03-01",
                      "name": "High Receive Window Misses",
                      "location": "global",
                      "properties": {
                        "description": "High receive window misses (throughput)",
                        "severity": 2,
                        "enabled": true,
                        "scopes": [
                          "[variables('ai_scope_resource_id')]"
                        ],
                        "evaluationFrequency": "[variables('evaluationFrequency')]",
                        "windowSize": "[variables('aggregationPeriod')]",
                        "criteria": {
                          "allOf": [
                            {
                              "alertSensitivity": "[variables('alertSensitivity')]",
                              "failingPeriods": {
                                "numberOfEvaluationPeriods": "[variables('evaluationPeriods')]",
                                "minFailingPeriodsToAlert": "[variables('failingPeriods')]"
                              },
                              "name": "Metric1",
                              "metricNamespace": "[variables('metricNamespace')]",
                              "metricName": "ReceiveWindowMisses",
                              "dimensions": [
                                {
                                  "name": "GatewayId",
                                  "operator": "Include",
                                  "values": [
                                    "*"
                                  ]
                                }
                              ],
                              "operator": "GreaterThan",
                              "timeAggregation": "Average",
                              "criterionType": "DynamicThresholdCriterion",
                              "skipMetricValidation": true
                            }
                          ],
                          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                        },
                        "autoMitigate": true,
                        "targetResourceType": "microsoft.insights/components",
                        "actions": []
                      }
                    },
                    {
                      "type": "microsoft.insights/metricAlerts",
                      "apiVersion": "2018-03-01",
                      "name": "Unhandled Exceptions",
                      "location": "global",
                      "properties": {
                        "description": "High error count (correctness)",
                        "severity": 2,
                        "enabled": true,
                        "scopes": [
                          "[variables('ai_scope_resource_id')]"
                        ],
                        "evaluationFrequency": "[variables('evaluationFrequency')]",
                        "windowSize": "[variables('aggregationPeriod')]",
                        "criteria": {
                          "allOf": [
                            {
                              "alertSensitivity": "[variables('alertSensitivity')]",
                              "failingPeriods": {
                                "numberOfEvaluationPeriods": "[variables('evaluationPeriods')]",
                                "minFailingPeriodsToAlert": "[variables('failingPeriods')]"
                              },
                              "name": "Metric1",
                              "metricNamespace": "[variables('metricNamespace')]",
                              "metricName": "UnhandledExceptions",
                              "operator": "GreaterThan",
                              "timeAggregation": "Count",
                              "criterionType": "DynamicThresholdCriterion",
                              "skipMetricValidation": true
                            }
                          ],
                          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                        },
                        "autoMitigate": true,
                        "targetResourceType": "microsoft.insights/components",
                        "actions": []
                      }
                    },
                    {
                      "type": "microsoft.insights/metricAlerts",
                      "apiVersion": "2018-03-01",
                      "name": "High Downstream Messages Abandoned Number",
                      "location": "global",
                      "properties": {
                        "description": "High device messages abandoned number (correctness, throughput)",
                        "severity": 2,
                        "enabled": true,
                        "scopes": [
                          "[variables('iot_hub_scope_resource_id')]"
                        ],
                        "evaluationFrequency": "[variables('evaluationFrequency')]",
                        "windowSize": "[variables('aggregationPeriod')]",
                        "criteria": {
                          "allOf": [
                            {
                              "alertSensitivity": "[variables('alertSensitivity')]",
                              "failingPeriods": {
                                "numberOfEvaluationPeriods": "[variables('evaluationPeriods')]",
                                "minFailingPeriodsToAlert": "[variables('failingPeriods')]"
                              },
                              "name": "Metric1",
                              "metricNamespace": "Microsoft.Devices/IotHubs",
                              "metricName": "c2d.commands.egress.abandon.success",
                              "operator": "GreaterThan",
                              "timeAggregation": "Average",
                              "criterionType": "DynamicThresholdCriterion",
                              "skipMetricValidation": true
                            }
                          ],
                          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                        },
                        "autoMitigate": true,
                        "targetResourceType": "microsoft.devices/iothubs",
                        "actions": []
                      }
                    },
                    {
                      "type": "microsoft.insights/metricAlerts",
                      "apiVersion": "2018-03-01",
                      "name": "High Downstream Messages Rejected Number",
                      "location": "global",
                      "properties": {
                        "description": "High device messages rejected number (correctness, throughput)",
                        "severity": 2,
                        "enabled": true,
                        "scopes": [
                          "[variables('iot_hub_scope_resource_id')]"
                        ],
                        "evaluationFrequency": "[variables('evaluationFrequency')]",
                        "windowSize": "[variables('aggregationPeriod')]",
                        "criteria": {
                          "allOf": [
                            {
                              "alertSensitivity": "[variables('alertSensitivity')]",
                              "failingPeriods": {
                                "numberOfEvaluationPeriods": "[variables('evaluationPeriods')]",
                                "minFailingPeriodsToAlert": "[variables('failingPeriods')]"
                              },
                              "name": "Metric1",
                              "metricNamespace": "Microsoft.Devices/IotHubs",
                              "metricName": "c2d.commands.egress.reject.success",
                              "operator": "GreaterThan",
                              "timeAggregation": "Average",
                              "criterionType": "DynamicThresholdCriterion",
                              "skipMetricValidation": true
                            }
                          ],
                          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                        },
                        "autoMitigate": true,
                        "targetResourceType": "microsoft.devices/iothubs",
                        "actions": []
                      }
                    },
                    {
                      "type": "microsoft.insights/metricAlerts",
                      "apiVersion": "2018-03-01",
                      "name": "High Upstream Messages Lost Ratio",
                      "location": "global",
                      "properties": {
                        "description": "High Upstream Messages Lost Ratio (Correctness) (D2CMessagesReceived/D2CMessagesDelivered)",
                        "severity": 2,
                        "enabled": true,
                        "scopes": [
                          "[variables('ai_scope_resource_id')]"
                        ],
                        "evaluationFrequency": "[variables('evaluationFrequency')]",
                        "windowSize": "[variables('aggregationPeriod')]",
                        "criteria": {
                          "allOf": [
                            {
                              "alertSensitivity": "[variables('alertSensitivity')]",
                              "failingPeriods": {
                                "numberOfEvaluationPeriods": "[variables('evaluationPeriods')]",
                                "minFailingPeriodsToAlert": "[variables('failingPeriods')]"
                              },
                              "name": "Metric1",
                              "metricNamespace": "[variables('metricNamespace')]",
                              "metricName": "D2CMessagesLostRatio",
                              "dimensions": [
                                {
                                  "name": "GatewayId",
                                  "operator": "Include",
                                  "values": [
                                    "*"
                                  ]
                                }
                              ],
                              "operator": "GreaterThan",
                              "timeAggregation": "Average",
                              "criterionType": "DynamicThresholdCriterion",
                              "skipMetricValidation": true
                            }
                          ],
                          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                        },
                        "autoMitigate": true,
                        "targetResourceType": "microsoft.insights/components",
                        "actions": []
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', format('{0}insight', parameters('prefix')))]"
              ]
            }
          ],
          "outputs": {
            "appInsightName": {
              "type": "string",
              "value": "[format('{0}insight', parameters('prefix'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'iotHub')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "discoveryService",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'observability')).outputs.appInsightName.value]"
          },
          "discoveryZipUrl": {
            "value": "[parameters('discoveryZipUrl')]"
          },
          "iotHubHostName": {
            "value": "[reference(resourceId('Microsoft.Devices/IoTHubs', variables('iotHubName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).hostName]"
          },
          "iotHubName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'iotHub')).outputs.iotHubName.value]"
          },
          "uniqueSolutionPrefix": {
            "value": "[parameters('uniqueSolutionPrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "296074552610079064"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "sku": {
              "type": "string",
              "defaultValue": "B1"
            },
            "iotHubHostName": {
              "type": "string"
            },
            "discoveryZipUrl": {
              "type": "string"
            },
            "iotHubName": {
              "type": "string"
            },
            "appInsightName": {
              "type": "string"
            },
            "roleNameGuid": {
              "type": "string",
              "defaultValue": "[guid(resourceGroup().id, 'twincontributor')]"
            },
            "uniqueSolutionPrefix": {
              "type": "string"
            }
          },
          "variables": {
            "webAppName": "[format('{0}discovery', parameters('uniqueSolutionPrefix'))]",
            "hostingPlanName": "[format('{0}plan', variables('webAppName'))]",
            "iotHubTwinContributorRoleId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/494bdba2-168f-4f31-a0a1-191d2f7c028c', subscription().subscriptionId)]",
            "aspNetCoreUrls": "http://0.0.0.0:80;https://0.0.0.0:443",
            "webSitesApiVersion": "2021-03-01"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[variables('hostingPlanName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[variables('webAppName')]",
              "location": "[parameters('location')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "IotHubHostName",
                      "value": "[parameters('iotHubHostName')]"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "[parameters('discoveryZipUrl')]"
                    },
                    {
                      "name": "ASPNETCORE_URLS",
                      "value": "[variables('aspNetCoreUrls')]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightName')), '2015-05-01').InstrumentationKey]"
                    }
                  ],
                  "webSocketsEnabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'iotHub')]",
        "[resourceId('Microsoft.Resources/deployments', 'observability')]"
      ]
    }
  ]
}